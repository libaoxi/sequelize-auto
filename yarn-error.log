Arguments: 
  /Users/admin/.nvm/versions/node/v10.15.0/bin/node /Users/admin/.nvm/versions/node/v10.15.0/bin/yarn add --dev nyc

PATH: 
  /Users/admin/.pyenv/shims:/Users/admin/.nvm/versions/node/v10.15.0/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/admin/.pyenv/shims:/Users/admin/.nvm/versions/node/v10.15.0/bin:/Users/admin/go/bin:/Users/admin/go/bin

Yarn version: 
  1.16.0

Node version: 
  10.15.0

Platform: 
  darwin x64

Trace: 
  Error: ENOENT: no such file or directory, copyfile '/Users/admin/Library/Caches/Yarn/v4/npm-p-limit-1.3.0-b86bd5f0c25690911c7590fcbfc2010d54b3ccb8/node_modules/p-limit/index.js' -> '/Users/admin/Workspaces/sequelize-auto/node_modules/read-pkg-up/node_modules/p-limit/index.js'

npm manifest: 
  {
    "name": "sequelize-auto",
    "version": "0.4.29",
    "description": "Automatically generate bare sequelize models from your database.",
    "main": "index",
    "keywords": [
      "mysql",
      "postgres",
      "sequelize",
      "sequelizejs",
      "mapper"
    ],
    "bin": {
      "sequelize-auto": "bin/sequelize-auto"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/sequelize/sequelize-auto.git"
    },
    "bugs": {
      "url": "https://github.com/sequelize/sequelize-auto/issues"
    },
    "nyc": {
      "exclude": [
        "**/test/**.js"
      ]
    },
    "scripts": {
      "test": "./node_modules/.bin/mocha --globals setImmediate,clearImmediate,__core-js_shared__ --ui tdd --check-leaks --colors -t 15000 --reporter spec \"test/**/*.test.js\"",
      "test-postgres": "./node_modules/.bin/cross-env DIALECT=postgres npm run test",
      "test-mysql": "./node_modules/.bin/cross-env DIALECT=mysql npm run test",
      "test-sqlite": "./node_modules/.bin/cross-env DIALECT=sqlite npm run test",
      "test-mssql": "./node_modules/.bin/cross-env DIALECT=mssql npm run test",
      "cover": "rm -rf coverage && COVERAGE=true ./node_modules/.bin/nyc -r lcov npm run test",
      "cover-mysql": "DIALECT=mysql npm run cover && mv coverage coverage-mysql",
      "cover-sqlite": "DIALECT=sqlite npm run cover && mv coverage coverage-sqlite",
      "cover-postgres": "DIALECT=postgres npm run cover && mv coverage coverage-postgres",
      "cover-postgres-native": "DIALECT=postgres-native npm run cover && mv coverage coverage-postgres-native",
      "cover-all": "npm run cover-mysql && npm run cover-postgres && npm run cover-postgres-native && npm run cover-sqlite && npm run merge-coverage",
      "merge-coverage": "rm -rf coverage && mkdir coverage && ./node_modules/.bin/lcov-result-merger 'coverage-*/lcov.info' 'coverage/lcov.info'",
      "codeclimate-send": "npm install -g codeclimate-test-reporter && CODECLIMATE_REPO_TOKEN=b9a25c5bf4c3875fb46ecb6d3a5f99e49f6872e6b92c074e5725d6dc2cd94f22 codeclimate-test-reporter < coverage/lcov.info",
      "codeclimate": "npm run cover-all && npm run codeclimate-send && npm run clean-coverage",
      "clean-coverage": "rm -rf coverage && rm -rf coverage-*"
    },
    "engines": {
      "node": ">=10.0.0"
    },
    "author": "Daniel Durante <me@danieldurante.com>",
    "license": "MIT",
    "dependencies": {
      "async": "^2.1.5",
      "eslint": "^3.19.0",
      "graceful-fs-extra": "^2.0.0",
      "mkdirp": "^0.5.1",
      "sequelize": "^3.30.2",
      "yargs": "^8.0.1"
    },
    "devDependencies": {
      "chai": "^4.0.1",
      "cross-env": "^5.0.0",
      "istanbul": "^0.4.5",
      "lcov-result-merger": "^3.0.0",
      "mkdirp": "^0.5.1",
      "mocha": "^4.0.0",
      "mysql": "^2.13.0",
      "nyc": "^11.0.1",
      "pg": "^6.1.5",
      "pg-hstore": "^2.3.2",
      "sqlite3": "^4.0.0",
      "tedious": "^2.0.0"
    }
  }

yarn manifest: 
  No manifest

Lockfile: 
  No lockfile
